@model CPRG214.Assignment2.Domain.Asset

@{
    ViewData["Title"] = "Create";
}

<h1>Create A New Asset</h1>

@*Error message only shows if the user tried to add a new, valid asset and it fails on the DB side*@
<h4 class="text-danger">@ViewBag.ErrorMessage</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        <form id="formCreate" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="TagNumber" class="control-label"></label>
                <input asp-for="TagNumber" class="form-control" />
                <span asp-validation-for="TagNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AssetTypeId" class="control-label"></label>
                <select asp-for="AssetTypeId" asp-items="@ViewBag.AssetTypeList" class="form-control" ></select>
                <span asp-validation-for="AssetTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Manufacturer" class="control-label"></label>
                <input asp-for="ManufacturerId" type="hidden" list="manufacts" id="manuValueField"/> <!--True input - gets value passed from below-->
                <input type="text" list="manufacts" class="form-control" autocomplete="off" id="comboManufacturers" />
                <datalist id="manufacts">
                    @foreach (SelectListItem m in ViewBag.ManufacturerList)
                    {
                        <option>@m.Text</option>
                        }
                    </datalist>
                    <span asp-validation-for="ManufacturerId" class="text-danger"></span>
                </div>
            <div class="form-group">
                <label asp-for="Model" class="control-label"></label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SerialNumber" class="control-label"></label>
                <input asp-for="SerialNumber" class="form-control" />
                <span asp-validation-for="SerialNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    // Get Manufacturer list in usable object form
    var list = @Html.Raw(ViewBag.ManufacturerListForJquery);

    // Once document is ready...
    $(document).ready(() => {
        // Whenever the combobox for manufacturers loses focus...
        $('#comboManufacturers').blur(() => {
            // Get the current value from the combobox 
            var manuName = $("#comboManufacturers").val();
            // Find the corresponding SelectListItem from the Viewbag 
            var match = list.find(m => m.Text == manuName);
            
            if (match == null)
            { // If the user provided a new manufacturer, have to add it to the database
                if (confirm("We don't have this manufacturer in our database yet. Would you like to add it?"))
                {
                    // Make a call to add to the database
                    $.ajax({
                        method: 'POST',
                        url: '/Assets/AddManufacturer',
                        data: { manufacturerType: manuName } // pass in the name written by the user
                    }).done((result, statusText, xhdr) => {
                        // The controller returns the insert ID as a result
                        // We provide that as the value for the hidden input for manufacturer
                        $("#manuValueField").val(result);
                    });
                }
                else // new input, but the user doesn't want it to be a new Manufacturer
                {
                    // Return focus to the input
                    $('#comboManufacturers').focus();
                }
            }   
            else // if the user did select an existing option
            {
                // Insert the corresponding ID into the true, hidden input for manufacturer
                $("#manuValueField").val(match.Value);
            }
        });
    });
</script>
   
}
